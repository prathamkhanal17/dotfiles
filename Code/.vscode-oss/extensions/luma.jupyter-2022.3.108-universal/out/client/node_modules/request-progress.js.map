{"version":3,"file":"node_modules/request-progress.js","mappings":"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","sources":["../.././node_modules/request-progress/index.js","../.././node_modules/throttleit/index.js","../../webpack/bootstrap","../../webpack/startup"],"sourcesContent":["'use strict';\n\nvar throttle = require('throttleit');\n\nfunction onRequest(context) {\n    // Reset dynamic stuff\n    context.startedAt = null;\n\n    context.state = context.request.progressState = null;\n\n    context.delayTimer && clearTimeout(context.delayTimer);\n    context.delayTimer = null;\n}\n\nfunction onResponse(context, response) {\n    // Mark start timestamp\n    context.startedAt = Date.now();\n\n    // Create state\n    // Also expose the state throught the request\n    // See https://github.com/IndigoUnited/node-request-progress/pull/2/files\n    context.state = context.request.progressState = {\n        time: {\n            elapsed: 0,\n            remaining: null\n        },\n        speed: null,\n        percent: null,\n        size: {\n            total: Number(response.headers[context.options.lengthHeader]) || null,\n            transferred: 0\n        }\n    };\n\n    // Delay the progress report\n    context.delayTimer = setTimeout(function () {\n        context.delayTimer = null;\n    }, context.options.delay);\n}\n\nfunction onData(context, data) {\n    context.state.size.transferred += data.length;\n\n    !context.delayTimer && context.reportState();\n}\n\nfunction onEnd(context) {\n    /* istanbul ignore if */\n    if (context.delayTimer) {\n        clearTimeout(context.delayTimer);\n        context.delayTimer = null;\n    }\n\n    context.request.progressState = context.request.progressContext = null;\n}\n\nfunction reportState(context) {\n    var state;\n\n    // Do nothing if still within the initial delay or if already finished\n    if (context.delayTimer || !context.request.progressState) {\n        return;\n    }\n\n    state = context.state;\n    state.time.elapsed = (Date.now() - context.startedAt) / 1000;\n\n    // Calculate speed only if 1s has passed\n    if (state.time.elapsed >= 1) {\n        state.speed = state.size.transferred / state.time.elapsed;\n    }\n\n    // Calculate percent & remaining only if we know the total size\n    if (state.size.total != null) {\n        state.percent = Math.min(state.size.transferred, state.size.total) / state.size.total;\n\n        if (state.speed != null) {\n            state.time.remaining = state.percent !== 1 ? (state.size.total / state.speed) - state.time.elapsed : 0;\n            state.time.remaining = Math.round(state.time.remaining * 1000) / 1000;  // Round to 4 decimals\n        }\n    }\n\n    context.request.emit('progress', state);\n}\n\n\nfunction requestProgress(request, options) {\n    var context;\n\n    if (request.progressContext) {\n        return request;\n    }\n\n    if (request.response) {\n        throw new Error('Already got response, it\\'s too late to track progress');\n    }\n\n    // Parse options\n    options = options || {};\n    options.throttle = options.throttle == null ? 1000 : options.throttle;\n    options.delay = options.delay || 0;\n    options.lengthHeader = options.lengthHeader || 'content-length';\n\n    // Create context\n    context = {};\n    context.request = request;\n    context.options = options;\n    context.reportState = throttle(reportState.bind(null, context), options.throttle);\n    // context.startedAt = null;\n    // context.state = null;\n    // context.delayTimer = null;\n\n    // Attach listeners\n    request\n    .on('request', onRequest.bind(null, context))\n    .on('response', function handleResponse(response) {\n        response.on('data', onData.bind(null, context));\n        \n        return onResponse(context, response);\n    })\n    .on('end', onEnd.bind(null, context));\n\n    request.progressContext = context;\n\n    return request;\n}\n\nmodule.exports = requestProgress;\n","module.exports = throttle;\n\n/**\n * Returns a new function that, when invoked, invokes `func` at most once per `wait` milliseconds.\n *\n * @param {Function} func Function to wrap.\n * @param {Number} wait Number of milliseconds that must elapse between `func` invocations.\n * @return {Function} A new function that wraps the `func` function passed in.\n */\n\nfunction throttle (func, wait) {\n  var ctx, args, rtn, timeoutID; // caching\n  var last = 0;\n\n  return function throttled () {\n    ctx = this;\n    args = arguments;\n    var delta = new Date() - last;\n    if (!timeoutID)\n      if (delta >= wait) call();\n      else timeoutID = setTimeout(call, wait - delta);\n    return rtn;\n  };\n\n  function call () {\n    timeoutID = 0;\n    last = +new Date();\n    rtn = func.apply(ctx, args);\n    ctx = null;\n    args = null;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(30848);\n"],"names":["throttle","onRequest","context","startedAt","state","request","progressState","delayTimer","clearTimeout","onData","data","size","transferred","length","reportState","onEnd","progressContext","time","elapsed","Date","now","speed","total","percent","Math","min","remaining","round","emit","module","exports","options","response","Error","delay","lengthHeader","bind","on","Number","headers","setTimeout","onResponse","func","wait","ctx","args","rtn","timeoutID","last","this","arguments","delta","call","apply","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}