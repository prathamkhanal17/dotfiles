{"version":3,"file":"node_modules/node-stream-zip.js","mappings":"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","sources":["../.././node_modules/node-stream-zip/node_stream_zip.js","../../external node-commonjs \"events\"","../../external node-commonjs \"fs\"","../../external node-commonjs \"path\"","../../external node-commonjs \"stream\"","../../external node-commonjs \"util\"","../../external node-commonjs \"zlib\"","../../webpack/bootstrap","../../webpack/startup"],"sourcesContent":["/**\n * @license node-stream-zip | (c) 2015 Antelle | https://github.com/antelle/node-stream-zip/blob/master/LICENSE\n * Portions copyright https://github.com/cthackers/adm-zip | https://raw.githubusercontent.com/cthackers/adm-zip/master/LICENSE\n */\n\n// region Deps\n\nvar\n    util = require('util'),\n    fs = require('fs'),\n    path = require('path'),\n    events = require('events'),\n    zlib = require('zlib'),\n    stream = require('stream');\n\n// endregion\n\n// region Constants\n\nvar consts = {\n    /* The local file header */\n    LOCHDR           : 30, // LOC header size\n    LOCSIG           : 0x04034b50, // \"PK\\003\\004\"\n    LOCVER           : 4, // version needed to extract\n    LOCFLG           : 6, // general purpose bit flag\n    LOCHOW           : 8, // compression method\n    LOCTIM           : 10, // modification time (2 bytes time, 2 bytes date)\n    LOCCRC           : 14, // uncompressed file crc-32 value\n    LOCSIZ           : 18, // compressed size\n    LOCLEN           : 22, // uncompressed size\n    LOCNAM           : 26, // filename length\n    LOCEXT           : 28, // extra field length\n\n    /* The Data descriptor */\n    EXTSIG           : 0x08074b50, // \"PK\\007\\008\"\n    EXTHDR           : 16, // EXT header size\n    EXTCRC           : 4, // uncompressed file crc-32 value\n    EXTSIZ           : 8, // compressed size\n    EXTLEN           : 12, // uncompressed size\n\n    /* The central directory file header */\n    CENHDR           : 46, // CEN header size\n    CENSIG           : 0x02014b50, // \"PK\\001\\002\"\n    CENVEM           : 4, // version made by\n    CENVER           : 6, // version needed to extract\n    CENFLG           : 8, // encrypt, decrypt flags\n    CENHOW           : 10, // compression method\n    CENTIM           : 12, // modification time (2 bytes time, 2 bytes date)\n    CENCRC           : 16, // uncompressed file crc-32 value\n    CENSIZ           : 20, // compressed size\n    CENLEN           : 24, // uncompressed size\n    CENNAM           : 28, // filename length\n    CENEXT           : 30, // extra field length\n    CENCOM           : 32, // file comment length\n    CENDSK           : 34, // volume number start\n    CENATT           : 36, // internal file attributes\n    CENATX           : 38, // external file attributes (host system dependent)\n    CENOFF           : 42, // LOC header offset\n\n    /* The entries in the end of central directory */\n    ENDHDR           : 22, // END header size\n    ENDSIG           : 0x06054b50, // \"PK\\005\\006\"\n    ENDSIGFIRST      : 0x50,\n    ENDSUB           : 8, // number of entries on this disk\n    ENDTOT           : 10, // total number of entries\n    ENDSIZ           : 12, // central directory size in bytes\n    ENDOFF           : 16, // offset of first CEN header\n    ENDCOM           : 20, // zip file comment length\n    MAXFILECOMMENT   : 0xFFFF,\n\n    /* The entries in the end of ZIP64 central directory locator */\n    ENDL64HDR       : 20, // ZIP64 end of central directory locator header size\n    ENDL64SIG       : 0x07064b50, // ZIP64 end of central directory locator signature\n    ENDL64SIGFIRST  : 0x50,\n    ENDL64OFS       : 8, // ZIP64 end of central directory offset\n\n    /* The entries in the end of ZIP64 central directory */\n    END64HDR        : 56, // ZIP64 end of central directory header size\n    END64SIG        : 0x06064b50, // ZIP64 end of central directory signature\n    END64SIGFIRST   : 0x50,\n    END64SUB        : 24, // number of entries on this disk\n    END64TOT        : 32, // total number of entries\n    END64SIZ        : 40,\n    END64OFF        : 48,\n\n    /* Compression methods */\n    STORED           : 0, // no compression\n    SHRUNK           : 1, // shrunk\n    REDUCED1         : 2, // reduced with compression factor 1\n    REDUCED2         : 3, // reduced with compression factor 2\n    REDUCED3         : 4, // reduced with compression factor 3\n    REDUCED4         : 5, // reduced with compression factor 4\n    IMPLODED         : 6, // imploded\n    // 7 reserved\n    DEFLATED         : 8, // deflated\n    ENHANCED_DEFLATED: 9, // enhanced deflated\n    PKWARE           : 10,// PKWare DCL imploded\n    // 11 reserved\n    BZIP2            : 12, //  compressed using BZIP2\n    // 13 reserved\n    LZMA             : 14, // LZMA\n    // 15-17 reserved\n    IBM_TERSE        : 18, // compressed using IBM TERSE\n    IBM_LZ77         : 19, //IBM LZ77 z\n\n    /* General purpose bit flag */\n    FLG_ENC          : 0,  // encrypted file\n    FLG_COMP1        : 1,  // compression option\n    FLG_COMP2        : 2,  // compression option\n    FLG_DESC         : 4,  // data descriptor\n    FLG_ENH          : 8,  // enhanced deflation\n    FLG_STR          : 16, // strong encryption\n    FLG_LNG          : 1024, // language encoding\n    FLG_MSK          : 4096, // mask header values\n    FLG_ENTRY_ENC    : 1,\n\n    /* 4.5 Extensible data fields */\n    EF_ID            : 0,\n    EF_SIZE          : 2,\n\n    /* Header IDs */\n    ID_ZIP64         : 0x0001,\n    ID_AVINFO        : 0x0007,\n    ID_PFS           : 0x0008,\n    ID_OS2           : 0x0009,\n    ID_NTFS          : 0x000a,\n    ID_OPENVMS       : 0x000c,\n    ID_UNIX          : 0x000d,\n    ID_FORK          : 0x000e,\n    ID_PATCH         : 0x000f,\n    ID_X509_PKCS7    : 0x0014,\n    ID_X509_CERTID_F : 0x0015,\n    ID_X509_CERTID_C : 0x0016,\n    ID_STRONGENC     : 0x0017,\n    ID_RECORD_MGT    : 0x0018,\n    ID_X509_PKCS7_RL : 0x0019,\n    ID_IBM1          : 0x0065,\n    ID_IBM2          : 0x0066,\n    ID_POSZIP        : 0x4690,\n\n    EF_ZIP64_OR_32   : 0xffffffff,\n    EF_ZIP64_OR_16   : 0xffff\n};\n\n// endregion\n\n// region StreamZip\n\nvar StreamZip = function(config) {\n    var\n        fd,\n        fileSize,\n        chunkSize,\n        ready = false,\n        that = this,\n        op,\n        centralDirectory,\n\n        entries = config.storeEntries !== false ? {} : null,\n        fileName = config.file;\n\n    open();\n\n    function open() {\n        fs.open(fileName, 'r', function(err, f) {\n            if (err)\n                return that.emit('error', err);\n            fd = f;\n            fs.fstat(fd, function(err, stat) {\n                if (err)\n                    return that.emit('error', err);\n                fileSize = stat.size;\n                chunkSize = config.chunkSize || Math.round(fileSize / 1000);\n                chunkSize = Math.max(Math.min(chunkSize, Math.min(128*1024, fileSize)), Math.min(1024, fileSize));\n                readCentralDirectory();\n            });\n        });\n    }\n\n    function readUntilFoundCallback(err, bytesRead) {\n        if (err || !bytesRead)\n            return that.emit('error', err || 'Archive read error');\n        var\n            buffer = op.win.buffer,\n            pos = op.lastPos,\n            bufferPosition = pos - op.win.position,\n            minPos = op.minPos;\n        while (--pos >= minPos && --bufferPosition >= 0) {\n            if (buffer.length - bufferPosition >= 4 &&\n                buffer[bufferPosition] === op.firstByte) { // quick check first signature byte\n                if (buffer.readUInt32LE(bufferPosition) === op.sig) {\n                    op.lastBufferPosition = bufferPosition;\n                    op.lastBytesRead = bytesRead;\n                    op.complete();\n                    return;\n                }\n            }\n        }\n        if (pos === minPos) {\n            return that.emit('error', 'Bad archive');\n        }\n        op.lastPos = pos + 1;\n        op.chunkSize *= 2;\n        if (pos <= minPos)\n            return that.emit('error', 'Bad archive');\n        var expandLength = Math.min(op.chunkSize, pos - minPos);\n        op.win.expandLeft(expandLength, readUntilFoundCallback);\n\n    }\n\n    function readCentralDirectory() {\n        var totalReadLength = Math.min(consts.ENDHDR + consts.MAXFILECOMMENT, fileSize);\n        op = {\n            win: new FileWindowBuffer(fd),\n            totalReadLength: totalReadLength,\n            minPos: fileSize - totalReadLength,\n            lastPos: fileSize,\n            chunkSize: Math.min(1024, chunkSize),\n            firstByte: consts.ENDSIGFIRST,\n            sig: consts.ENDSIG,\n            complete: readCentralDirectoryComplete\n        };\n        op.win.read(fileSize - op.chunkSize, op.chunkSize, readUntilFoundCallback);\n    }\n\n    function readCentralDirectoryComplete() {\n        var buffer = op.win.buffer;\n        var pos = op.lastBufferPosition;\n        try {\n            centralDirectory = new CentralDirectoryHeader();\n            centralDirectory.read(buffer.slice(pos, pos + consts.ENDHDR));\n            centralDirectory.headerOffset = op.win.position + pos;\n            if (centralDirectory.commentLength)\n                that.comment = buffer.slice(pos + consts.ENDHDR,\n                    pos + consts.ENDHDR + centralDirectory.commentLength).toString();\n            else\n                that.comment = null;\n            that.entriesCount = centralDirectory.volumeEntries;\n            that.centralDirectory = centralDirectory;\n            if (centralDirectory.volumeEntries === consts.EF_ZIP64_OR_16 && centralDirectory.totalEntries === consts.EF_ZIP64_OR_16\n                || centralDirectory.size === consts.EF_ZIP64_OR_32 || centralDirectory.offset === consts.EF_ZIP64_OR_32) {\n                readZip64CentralDirectoryLocator();\n            } else {\n                op = {};\n                readEntries();\n            }\n        } catch (err) {\n            that.emit('error', err);\n        }\n    }\n\n    function readZip64CentralDirectoryLocator() {\n        var length = consts.ENDL64HDR;\n        if (op.lastBufferPosition > length) {\n            op.lastBufferPosition -= length;\n            readZip64CentralDirectoryLocatorComplete();\n        } else {\n            op = {\n                win: op.win,\n                totalReadLength: length,\n                minPos: op.win.position - length,\n                lastPos: op.win.position,\n                chunkSize: op.chunkSize,\n                firstByte: consts.ENDL64SIGFIRST,\n                sig: consts.ENDL64SIG,\n                complete: readZip64CentralDirectoryLocatorComplete\n            };\n            op.win.read(op.lastPos - op.chunkSize, op.chunkSize, readUntilFoundCallback);\n        }\n    }\n\n    function readZip64CentralDirectoryLocatorComplete() {\n        var buffer = op.win.buffer;\n        var locHeader = new CentralDirectoryLoc64Header();\n        locHeader.read(buffer.slice(op.lastBufferPosition, op.lastBufferPosition + consts.ENDL64HDR));\n        var readLength = fileSize - locHeader.headerOffset;\n        op = {\n            win: op.win,\n            totalReadLength: readLength,\n            minPos: locHeader.headerOffset,\n            lastPos: op.lastPos,\n            chunkSize: op.chunkSize,\n            firstByte: consts.END64SIGFIRST,\n            sig: consts.END64SIG,\n            complete: readZip64CentralDirectoryComplete\n        };\n        op.win.read(fileSize - op.chunkSize, op.chunkSize, readUntilFoundCallback);\n    }\n\n    function readZip64CentralDirectoryComplete() {\n        var buffer = op.win.buffer;\n        var zip64cd = new CentralDirectoryZip64Header();\n        zip64cd.read(buffer.slice(op.lastBufferPosition, op.lastBufferPosition + consts.END64HDR));\n        that.centralDirectory.volumeEntries = zip64cd.volumeEntries;\n        that.centralDirectory.totalEntries = zip64cd.totalEntries;\n        that.centralDirectory.size = zip64cd.size;\n        that.centralDirectory.offset = zip64cd.offset;\n        that.entriesCount = zip64cd.volumeEntries;\n        op = {};\n        readEntries();\n    }\n\n    function readEntries() {\n        op = {\n            win: new FileWindowBuffer(fd),\n            pos: centralDirectory.offset,\n            chunkSize: chunkSize,\n            entriesLeft: centralDirectory.volumeEntries\n        };\n        op.win.read(op.pos, Math.min(chunkSize, fileSize - op.pos), readEntriesCallback);\n    }\n\n    function readEntriesCallback(err, bytesRead) {\n        if (err || !bytesRead)\n            return that.emit('error', err || 'Entries read error');\n        var\n            buffer = op.win.buffer,\n            bufferPos = op.pos - op.win.position,\n            bufferLength = buffer.length,\n            entry = op.entry;\n        try {\n            while (op.entriesLeft > 0) {\n                if (!entry) {\n                    entry = new ZipEntry();\n                    entry.readHeader(buffer, bufferPos);\n                    entry.headerOffset = op.win.position + bufferPos;\n                    op.entry = entry;\n                    op.pos += consts.CENHDR;\n                    bufferPos += consts.CENHDR;\n                }\n                var entryHeaderSize = entry.fnameLen + entry.extraLen + entry.comLen;\n                var advanceBytes = entryHeaderSize + (op.entriesLeft > 1 ? consts.CENHDR : 0);\n                if (bufferLength - bufferPos < advanceBytes) {\n                    op.win.moveRight(chunkSize, readEntriesCallback, bufferPos);\n                    op.move = true;\n                    return;\n                }\n                entry.read(buffer, bufferPos);\n                if (!config.skipEntryNameValidation) {\n                    entry.validateName();\n                }\n                if (entries)\n                    entries[entry.name] = entry;\n                that.emit('entry', entry);\n                op.entry = entry = null;\n                op.entriesLeft--;\n                op.pos += entryHeaderSize;\n                bufferPos += entryHeaderSize;\n            }\n            that.emit('ready');\n        } catch (err) {\n            that.emit('error', err);\n        }\n    }\n\n    function checkEntriesExist() {\n        if (!entries)\n            throw new Error('storeEntries disabled');\n    }\n\n    Object.defineProperty(this, 'ready', { get: function() { return ready; } });\n\n    this.entry = function(name) {\n        checkEntriesExist();\n        return entries[name];\n    };\n\n    this.entries = function() {\n        checkEntriesExist();\n        return entries;\n    };\n\n    this.stream = function(entry, callback) {\n        return this.openEntry(entry, function(err, entry) {\n            if (err)\n                return callback(err);\n            var offset = dataOffset(entry);\n            var entryStream = new EntryDataReaderStream(fd, offset, entry.compressedSize);\n            if (entry.method === consts.STORED) {\n            } else if (entry.method === consts.DEFLATED || entry.method === consts.ENHANCED_DEFLATED) {\n                entryStream = entryStream.pipe(zlib.createInflateRaw());\n            } else {\n                return callback('Unknown compression method: ' + entry.method);\n            }\n            if (canVerifyCrc(entry))\n                entryStream = entryStream.pipe(new EntryVerifyStream(entryStream, entry.crc, entry.size));\n            callback(null, entryStream);\n        }, false);\n    };\n\n    this.entryDataSync = function(entry) {\n        var err = null;\n        this.openEntry(entry, function(e, en) {\n            err = e;\n            entry = en;\n        }, true);\n        if (err)\n            throw err;\n        var\n            data = Buffer.alloc(entry.compressedSize),\n            bytesRead;\n        new FsRead(fd, data, 0, entry.compressedSize, dataOffset(entry), function(e, br) {\n            err = e;\n            bytesRead = br;\n        }).read(true);\n        if (err)\n            throw err;\n        if (entry.method === consts.STORED) {\n        } else if (entry.method === consts.DEFLATED || entry.method === consts.ENHANCED_DEFLATED) {\n            data = zlib.inflateRawSync(data);\n        } else {\n            throw new Error('Unknown compression method: ' + entry.method);\n        }\n        if (data.length !== entry.size)\n            throw new Error('Invalid size');\n        if (canVerifyCrc(entry)) {\n            var verify = new CrcVerify(entry.crc, entry.size);\n            verify.data(data);\n        }\n        return data;\n    };\n\n    this.openEntry = function(entry, callback, sync) {\n        if (typeof entry === 'string') {\n            checkEntriesExist();\n            entry = entries[entry];\n            if (!entry)\n                return callback('Entry not found');\n        }\n        if (!entry.isFile)\n            return callback('Entry is not file');\n        if (!fd)\n            return callback('Archive closed');\n        var buffer = Buffer.alloc(consts.LOCHDR);\n        new FsRead(fd, buffer, 0, buffer.length, entry.offset, function(err) {\n            if (err)\n                return callback(err);\n            var readEx;\n            try {\n                entry.readDataHeader(buffer);\n                if (entry.encrypted) {\n                    readEx = 'Entry encrypted';\n                }\n            } catch (ex) {\n                readEx = ex\n            }\n            callback(readEx, entry);\n        }).read(sync);\n    };\n\n    function dataOffset(entry) {\n        return entry.offset + consts.LOCHDR + entry.fnameLen + entry.extraLen;\n    }\n\n    function canVerifyCrc(entry) {\n        // if bit 3 (0x08) of the general-purpose flags field is set, then the CRC-32 and file sizes are not known when the header is written\n        return (entry.flags & 0x8) != 0x8;\n    }\n\n    function extract(entry, outPath, callback) {\n        that.stream(entry, function (err, stm) {\n            if (err) {\n                callback(err);\n            } else {\n                var fsStm, errThrown;\n                stm.on('error', function(err) {\n                    errThrown = err;\n                    if (fsStm) {\n                        stm.unpipe(fsStm);\n                        fsStm.close(function () {\n                            callback(err);\n                        });\n                    }\n                });\n                fs.open(outPath, 'w', function(err, fdFile) {\n                    if (err)\n                        return callback(err || errThrown);\n                    if (errThrown) {\n                        fs.close(fd, function() {\n                            callback(errThrown);\n                        });\n                        return;\n                    }\n                    fsStm = fs.createWriteStream(outPath, { fd: fdFile });\n                    fsStm.on('finish', function() {\n                        that.emit('extract', entry, outPath);\n                        if (!errThrown)\n                            callback();\n                    });\n                    stm.pipe(fsStm);\n                });\n            }\n        });\n    }\n\n    function createDirectories(baseDir, dirs, callback) {\n        if (!dirs.length)\n            return callback();\n        var dir = dirs.shift();\n        dir = path.join(baseDir, path.join.apply(path, dir));\n        fs.mkdir(dir, function(err) {\n            if (err && err.code !== 'EEXIST')\n                return callback(err);\n            createDirectories(baseDir, dirs, callback);\n        });\n    }\n\n    function extractFiles(baseDir, baseRelPath, files, callback, extractedCount) {\n        if (!files.length)\n            return callback(null, extractedCount);\n        var file = files.shift();\n        var targetPath = path.join(baseDir, file.name.replace(baseRelPath, ''));\n        extract(file, targetPath, function (err) {\n            if (err)\n                return callback(err, extractedCount);\n            extractFiles(baseDir, baseRelPath, files, callback, extractedCount + 1);\n        });\n    }\n\n    this.extract = function(entry, outPath, callback) {\n        var entryName = entry || '';\n        if (typeof entry === 'string') {\n            entry = this.entry(entry);\n            if (entry) {\n                entryName = entry.name;\n            } else {\n                if (entryName.length && entryName[entryName.length - 1] !== '/')\n                    entryName += '/';\n            }\n        }\n        if (!entry || entry.isDirectory) {\n            var files = [], dirs = [], allDirs = {};\n            for (var e in entries) {\n                if (Object.prototype.hasOwnProperty.call(entries, e) && e.lastIndexOf(entryName, 0) === 0) {\n                    var relPath = e.replace(entryName, '');\n                    var childEntry = entries[e];\n                    if (childEntry.isFile) {\n                        files.push(childEntry);\n                        relPath = path.dirname(relPath);\n                    }\n                    if (relPath && !allDirs[relPath] && relPath !== '.') {\n                        allDirs[relPath] = true;\n                        var parts = relPath.split('/').filter(function (f) { return f; });\n                        if (parts.length)\n                            dirs.push(parts);\n                        while (parts.length > 1) {\n                            parts = parts.slice(0, parts.length - 1);\n                            var partsPath = parts.join('/');\n                            if (allDirs[partsPath] || partsPath === '.') {\n                                break;\n                            }\n                            allDirs[partsPath] = true;\n                            dirs.push(parts);\n                        }\n                    }\n                }\n            }\n            dirs.sort(function(x, y) { return x.length - y.length; });\n            if (dirs.length) {\n                createDirectories(outPath, dirs, function (err) {\n                    if (err)\n                        callback(err);\n                    else\n                        extractFiles(outPath, entryName, files, callback, 0);\n                });\n            } else {\n                extractFiles(outPath, entryName, files, callback, 0);\n            }\n        } else {\n            fs.stat(outPath, function(err, stat) {\n                if (stat && stat.isDirectory())\n                    extract(entry, path.join(outPath, path.basename(entry.name)), callback);\n                else\n                    extract(entry, outPath, callback);\n            });\n        }\n    };\n\n    this.close = function(callback) {\n        if (fd) {\n            fs.close(fd, function(err) {\n                fd = null;\n                if (callback)\n                    callback(err);\n            });\n        } else if (callback) {\n            callback();\n        }\n    };\n};\n\nStreamZip.setFs = function(customFs) {\n    fs = customFs;\n};\n\nutil.inherits(StreamZip, events.EventEmitter);\n\n// endregion\n\n// region CentralDirectoryHeader\n\nvar CentralDirectoryHeader = function() {\n};\n\nCentralDirectoryHeader.prototype.read = function(data) {\n    if (data.length != consts.ENDHDR || data.readUInt32LE(0) != consts.ENDSIG)\n        throw new Error('Invalid central directory');\n    // number of entries on this volume\n    this.volumeEntries = data.readUInt16LE(consts.ENDSUB);\n    // total number of entries\n    this.totalEntries = data.readUInt16LE(consts.ENDTOT);\n    // central directory size in bytes\n    this.size = data.readUInt32LE(consts.ENDSIZ);\n    // offset of first CEN header\n    this.offset = data.readUInt32LE(consts.ENDOFF);\n    // zip file comment length\n    this.commentLength = data.readUInt16LE(consts.ENDCOM);\n};\n\n// endregion\n\n// region CentralDirectoryLoc64Header\n\nvar CentralDirectoryLoc64Header = function() {\n};\n\nCentralDirectoryLoc64Header.prototype.read = function(data) {\n    if (data.length != consts.ENDL64HDR || data.readUInt32LE(0) != consts.ENDL64SIG)\n        throw new Error('Invalid zip64 central directory locator');\n    // ZIP64 EOCD header offset\n    this.headerOffset = Util.readUInt64LE(data, consts.ENDSUB);\n};\n\n// endregion\n\n// region CentralDirectoryZip64Header\n\nvar CentralDirectoryZip64Header = function() {\n};\n\nCentralDirectoryZip64Header.prototype.read = function(data) {\n    if (data.length != consts.END64HDR || data.readUInt32LE(0) != consts.END64SIG)\n        throw new Error('Invalid central directory');\n    // number of entries on this volume\n    this.volumeEntries = Util.readUInt64LE(data, consts.END64SUB);\n    // total number of entries\n    this.totalEntries = Util.readUInt64LE(data, consts.END64TOT);\n    // central directory size in bytes\n    this.size = Util.readUInt64LE(data, consts.END64SIZ);\n    // offset of first CEN header\n    this.offset = Util.readUInt64LE(data, consts.END64OFF);\n};\n\n// endregion\n\n// region ZipEntry\n\nvar ZipEntry = function() {\n};\n\nfunction toBits(dec, size) {\n    var b = (dec >>> 0).toString(2);\n    while (b.length < size)\n        b = '0' + b;\n    return b.split('');\n}\n\nfunction parseZipTime(timebytes, datebytes) {\n    var timebits = toBits(timebytes, 16);\n    var datebits = toBits(datebytes, 16);\n\n    var mt = {\n        h: parseInt(timebits.slice(0,5).join(''), 2),\n        m: parseInt(timebits.slice(5,11).join(''), 2),\n        s: parseInt(timebits.slice(11,16).join(''), 2) * 2,\n        Y: parseInt(datebits.slice(0,7).join(''), 2) + 1980,\n        M: parseInt(datebits.slice(7,11).join(''), 2),\n        D: parseInt(datebits.slice(11,16).join(''), 2),\n    };\n    var dt_str = [mt.Y, mt.M, mt.D].join('-') + ' ' + [mt.h, mt.m, mt.s].join(':') + ' GMT+0';\n    return new Date(dt_str).getTime();\n}\n\nZipEntry.prototype.readHeader = function(data, offset) {\n    // data should be 46 bytes and start with \"PK 01 02\"\n    if (data.length < offset + consts.CENHDR || data.readUInt32LE(offset) != consts.CENSIG) {\n        throw new Error('Invalid entry header');\n    }\n    // version made by\n    this.verMade = data.readUInt16LE(offset + consts.CENVEM);\n    // version needed to extract\n    this.version = data.readUInt16LE(offset + consts.CENVER);\n    // encrypt, decrypt flags\n    this.flags = data.readUInt16LE(offset + consts.CENFLG);\n    // compression method\n    this.method = data.readUInt16LE(offset + consts.CENHOW);\n    // modification time (2 bytes time, 2 bytes date)\n    var timebytes = data.readUInt16LE(offset + consts.CENTIM);\n    var datebytes = data.readUInt16LE(offset + consts.CENTIM + 2);\n    this.time = parseZipTime(timebytes, datebytes);\n\n    // uncompressed file crc-32 value\n    this.crc = data.readUInt32LE(offset + consts.CENCRC);\n    // compressed size\n    this.compressedSize = data.readUInt32LE(offset + consts.CENSIZ);\n    // uncompressed size\n    this.size = data.readUInt32LE(offset + consts.CENLEN);\n    // filename length\n    this.fnameLen = data.readUInt16LE(offset + consts.CENNAM);\n    // extra field length\n    this.extraLen = data.readUInt16LE(offset + consts.CENEXT);\n    // file comment length\n    this.comLen = data.readUInt16LE(offset + consts.CENCOM);\n    // volume number start\n    this.diskStart = data.readUInt16LE(offset + consts.CENDSK);\n    // internal file attributes\n    this.inattr = data.readUInt16LE(offset + consts.CENATT);\n    // external file attributes\n    this.attr = data.readUInt32LE(offset + consts.CENATX);\n    // LOC header offset\n    this.offset = data.readUInt32LE(offset + consts.CENOFF);\n};\n\nZipEntry.prototype.readDataHeader = function(data) {\n    // 30 bytes and should start with \"PK\\003\\004\"\n    if (data.readUInt32LE(0) != consts.LOCSIG) {\n        throw new Error('Invalid local header');\n    }\n    // version needed to extract\n    this.version = data.readUInt16LE(consts.LOCVER);\n    // general purpose bit flag\n    this.flags = data.readUInt16LE(consts.LOCFLG);\n    // compression method\n    this.method = data.readUInt16LE(consts.LOCHOW);\n    // modification time (2 bytes time ; 2 bytes date)\n    var timebytes = data.readUInt16LE(consts.LOCTIM);\n    var datebytes = data.readUInt16LE(consts.LOCTIM + 2);\n    this.time = parseZipTime(timebytes, datebytes);\n\n    // uncompressed file crc-32 value\n    this.crc = data.readUInt32LE(consts.LOCCRC) || this.crc;\n    // compressed size\n    var compressedSize = data.readUInt32LE(consts.LOCSIZ);\n    if (compressedSize && compressedSize !== consts.EF_ZIP64_OR_32) {\n        this.compressedSize = compressedSize;\n    }\n    // uncompressed size\n    var size = data.readUInt32LE(consts.LOCLEN);\n    if (size && size !== consts.EF_ZIP64_OR_32) {\n        this.size = size;\n    }\n    // filename length\n    this.fnameLen = data.readUInt16LE(consts.LOCNAM);\n    // extra field length\n    this.extraLen = data.readUInt16LE(consts.LOCEXT);\n};\n\nZipEntry.prototype.read = function(data, offset) {\n    this.name = data.slice(offset, offset += this.fnameLen).toString();\n    var lastChar = data[offset - 1];\n    this.isDirectory = (lastChar == 47) || (lastChar == 92);\n\n    if (this.extraLen) {\n        this.readExtra(data, offset);\n        offset += this.extraLen;\n    }\n    this.comment = this.comLen ? data.slice(offset, offset + this.comLen).toString() : null;\n};\n\nZipEntry.prototype.validateName = function() {\n    if (/\\\\|^\\w+:|^\\/|(^|\\/)\\.\\.(\\/|$)/.test(this.name)) {\n        throw new Error('Malicious entry: ' + this.name);\n    }\n};\n\nZipEntry.prototype.readExtra = function(data, offset) {\n    var signature, size, maxPos = offset + this.extraLen;\n    while (offset < maxPos) {\n        signature = data.readUInt16LE(offset);\n        offset += 2;\n        size = data.readUInt16LE(offset);\n        offset += 2;\n        if (consts.ID_ZIP64 === signature) {\n            this.parseZip64Extra(data, offset, size);\n        }\n        offset += size;\n    }\n};\n\nZipEntry.prototype.parseZip64Extra = function(data, offset, length) {\n    if (length >= 8 && this.size === consts.EF_ZIP64_OR_32) {\n        this.size = Util.readUInt64LE(data, offset);\n        offset += 8; length -= 8;\n    }\n    if (length >= 8 && this.compressedSize === consts.EF_ZIP64_OR_32) {\n        this.compressedSize = Util.readUInt64LE(data, offset);\n        offset += 8; length -= 8;\n    }\n    if (length >= 8 && this.offset === consts.EF_ZIP64_OR_32) {\n        this.offset = Util.readUInt64LE(data, offset);\n        offset += 8; length -= 8;\n    }\n    if (length >= 4 && this.diskStart === consts.EF_ZIP64_OR_16) {\n        this.diskStart = data.readUInt32LE(offset);\n        // offset += 4; length -= 4;\n    }\n};\n\nObject.defineProperty(ZipEntry.prototype, 'encrypted', {\n    get: function() { return (this.flags & consts.FLG_ENTRY_ENC) == consts.FLG_ENTRY_ENC; }\n});\n\nObject.defineProperty(ZipEntry.prototype, 'isFile', {\n    get: function() { return !this.isDirectory; }\n});\n\n// endregion\n\n// region FsRead\n\nvar FsRead = function(fd, buffer, offset, length, position, callback) {\n    this.fd = fd;\n    this.buffer = buffer;\n    this.offset = offset;\n    this.length = length;\n    this.position = position;\n    this.callback = callback;\n    this.bytesRead = 0;\n    this.waiting = false;\n};\n\nFsRead.prototype.read = function(sync) {\n    if (StreamZip.debug) {\n        console.log('read', this.position, this.bytesRead, this.length, this.offset);\n    }\n    this.waiting = true;\n    var err;\n    if (sync) {\n        try {\n            var bytesRead = fs.readSync(this.fd, this.buffer, this.offset + this.bytesRead,\n                this.length - this.bytesRead, this.position + this.bytesRead);\n        } catch (e) {\n            err = e;\n        }\n        this.readCallback(sync, err, err ? bytesRead : null);\n    } else {\n        fs.read(this.fd, this.buffer, this.offset + this.bytesRead,\n            this.length - this.bytesRead, this.position + this.bytesRead,\n            this.readCallback.bind(this, sync));\n    }\n};\n\nFsRead.prototype.readCallback = function(sync, err, bytesRead) {\n    if (typeof bytesRead === 'number')\n        this.bytesRead += bytesRead;\n    if (err || !bytesRead || this.bytesRead === this.length) {\n        this.waiting = false;\n        return this.callback(err, this.bytesRead);\n    } else {\n        this.read(sync);\n    }\n};\n\n// endregion\n\n// region FileWindowBuffer\n\nvar FileWindowBuffer = function(fd) {\n    this.position = 0;\n    this.buffer = Buffer.alloc(0);\n\n    var fsOp = null;\n\n    this.checkOp = function() {\n        if (fsOp && fsOp.waiting)\n            throw new Error('Operation in progress');\n    };\n\n    this.read = function(pos, length, callback) {\n        this.checkOp();\n        if (this.buffer.length < length)\n            this.buffer = Buffer.alloc(length);\n        this.position = pos;\n        fsOp = new FsRead(fd, this.buffer, 0, length, this.position, callback).read();\n    };\n\n    this.expandLeft = function(length, callback) {\n        this.checkOp();\n        this.buffer = Buffer.concat([Buffer.alloc(length), this.buffer]);\n        this.position -= length;\n        if (this.position < 0)\n            this.position = 0;\n        fsOp = new FsRead(fd, this.buffer, 0, length, this.position, callback).read();\n    };\n\n    this.expandRight = function(length, callback) {\n        this.checkOp();\n        var offset = this.buffer.length;\n        this.buffer = Buffer.concat([this.buffer, Buffer.alloc(length)]);\n        fsOp = new FsRead(fd, this.buffer, offset, length, this.position + offset, callback).read();\n    };\n\n    this.moveRight = function(length, callback, shift) {\n        this.checkOp();\n        if (shift) {\n            this.buffer.copy(this.buffer, 0, shift);\n        } else {\n            shift = 0;\n        }\n        this.position += shift;\n        fsOp = new FsRead(fd, this.buffer, this.buffer.length - shift, shift, this.position + this.buffer.length - shift, callback).read();\n    };\n};\n\n// endregion\n\n// region EntryDataReaderStream\n\nvar EntryDataReaderStream = function(fd, offset, length) {\n    stream.Readable.prototype.constructor.call(this);\n    this.fd = fd;\n    this.offset = offset;\n    this.length = length;\n    this.pos = 0;\n    this.readCallback = this.readCallback.bind(this);\n};\n\nutil.inherits(EntryDataReaderStream, stream.Readable);\n\nEntryDataReaderStream.prototype._read = function(n) {\n    var buffer = Buffer.alloc(Math.min(n, this.length - this.pos));\n    if (buffer.length) {\n        fs.read(this.fd, buffer, 0, buffer.length, this.offset + this.pos, this.readCallback);\n    } else {\n        this.push(null);\n    }\n};\n\nEntryDataReaderStream.prototype.readCallback = function(err, bytesRead, buffer) {\n    this.pos += bytesRead;\n    if (err) {\n        this.emit('error', err);\n        this.push(null);\n    } else if (!bytesRead) {\n        this.push(null);\n    } else {\n        if (bytesRead !== buffer.length)\n            buffer = buffer.slice(0, bytesRead);\n        this.push(buffer);\n    }\n};\n\n// endregion\n\n// region EntryVerifyStream\n\nvar EntryVerifyStream = function(baseStm, crc, size) {\n    stream.Transform.prototype.constructor.call(this);\n    this.verify = new CrcVerify(crc, size);\n    var that = this;\n    baseStm.on('error', function(e) {\n        that.emit('error', e);\n    });\n};\n\nutil.inherits(EntryVerifyStream, stream.Transform);\n\nEntryVerifyStream.prototype._transform = function(data, encoding, callback) {\n    var err;\n    try {\n        this.verify.data(data);\n    } catch (e) {\n        err = e;\n    }\n    callback(err, data);\n};\n\n// endregion\n\n// region CrcVerify\n\nvar CrcVerify = function(crc, size) {\n    this.crc = crc;\n    this.size = size;\n    this.state = {\n        crc: ~0,\n        size: 0\n    };\n};\n\nCrcVerify.prototype.data = function(data) {\n    var crcTable = CrcVerify.getCrcTable();\n    var crc = this.state.crc, off = 0, len = data.length;\n    while (--len >= 0)\n        crc = crcTable[(crc ^ data[off++]) & 0xff] ^ (crc >>> 8);\n    this.state.crc = crc;\n    this.state.size += data.length;\n    if (this.state.size >= this.size) {\n        var buf = Buffer.alloc(4);\n        buf.writeInt32LE(~this.state.crc & 0xffffffff, 0);\n        crc = buf.readUInt32LE(0);\n        if (crc !== this.crc)\n            throw new Error('Invalid CRC');\n        if (this.state.size !== this.size)\n            throw new Error('Invalid size');\n    }\n};\n\nCrcVerify.getCrcTable = function() {\n    var crcTable = CrcVerify.crcTable;\n    if (!crcTable) {\n        CrcVerify.crcTable = crcTable = [];\n        var b = Buffer.alloc(4);\n        for (var n = 0; n < 256; n++) {\n            var c = n;\n            for (var k = 8; --k >= 0; )\n                if ((c & 1) != 0)  { c = 0xedb88320 ^ (c >>> 1); } else { c = c >>> 1; }\n            if (c < 0) {\n                b.writeInt32LE(c, 0);\n                c = b.readUInt32LE(0);\n            }\n            crcTable[n] = c;\n        }\n    }\n    return crcTable;\n};\n\n// endregion\n\n// region Util\n\nvar Util = {\n    readUInt64LE: function(buffer, offset) {\n        return (buffer.readUInt32LE(offset + 4) * 0x0000000100000000) + buffer.readUInt32LE(offset);\n    }\n};\n\n// endregion\n\n// region exports\n\nmodule.exports = StreamZip;\n\n// endregion\n","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(51020);\n"],"names":["util","fs","path","events","zlib","stream","consts","StreamZip","config","fd","fileSize","chunkSize","op","centralDirectory","that","this","entries","storeEntries","fileName","file","readUntilFoundCallback","err","bytesRead","emit","buffer","win","pos","lastPos","bufferPosition","position","minPos","length","firstByte","readUInt32LE","sig","lastBufferPosition","lastBytesRead","complete","expandLength","Math","min","expandLeft","readCentralDirectoryComplete","CentralDirectoryHeader","read","slice","headerOffset","commentLength","comment","toString","entriesCount","volumeEntries","totalEntries","size","offset","readZip64CentralDirectoryLocatorComplete","totalReadLength","readEntries","locHeader","CentralDirectoryLoc64Header","readLength","readZip64CentralDirectoryComplete","zip64cd","CentralDirectoryZip64Header","FileWindowBuffer","entriesLeft","readEntriesCallback","bufferPos","bufferLength","entry","ZipEntry","readHeader","entryHeaderSize","fnameLen","extraLen","comLen","moveRight","move","skipEntryNameValidation","validateName","name","checkEntriesExist","Error","dataOffset","canVerifyCrc","flags","extract","outPath","callback","stm","fsStm","errThrown","on","unpipe","close","open","fdFile","createWriteStream","pipe","createDirectories","baseDir","dirs","dir","shift","join","apply","mkdir","code","extractFiles","baseRelPath","files","extractedCount","targetPath","replace","f","fstat","stat","round","max","Object","defineProperty","get","openEntry","entryStream","EntryDataReaderStream","compressedSize","method","createInflateRaw","EntryVerifyStream","crc","entryDataSync","e","en","data","Buffer","alloc","FsRead","br","inflateRawSync","CrcVerify","sync","isFile","readEx","readDataHeader","encrypted","ex","entryName","isDirectory","allDirs","prototype","hasOwnProperty","call","lastIndexOf","relPath","childEntry","push","dirname","parts","split","filter","partsPath","sort","x","y","basename","setFs","customFs","inherits","EventEmitter","readUInt16LE","Util","readUInt64LE","toBits","dec","b","parseZipTime","timebytes","datebytes","timebits","datebits","mt","h","parseInt","m","s","Y","M","D","dt_str","Date","getTime","verMade","version","time","diskStart","inattr","attr","lastChar","readExtra","test","signature","maxPos","parseZip64Extra","waiting","debug","console","log","readSync","readCallback","bind","fsOp","checkOp","concat","expandRight","copy","Readable","constructor","_read","n","baseStm","Transform","verify","_transform","encoding","state","crcTable","getCrcTable","off","len","buf","writeInt32LE","c","k","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}